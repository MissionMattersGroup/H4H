<!-- This Page is the main page of application -->
<apex:page controller="DynamicQueryForDreamMap"
    extensions="DisplayPopupExt" sidebar="false" id="thePage">
    <!-- Css file added from static resource -->
    <apex:stylesheet value="{!URLFOR($Resource.CssForDreamMap, '/DreamMaps.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.CssForDreamMap, '/DreamMaps_Loading.css')}" />
    <!-- Css file added from static resource -->
    <head>
<meta charset='utf-8' />
    </head>
    <!-- Start of script -->
<!--     <script -->
<!--         src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script> -->
<!--     <apex:stylesheet value="//ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/redmond/jquery-ui.css" /> -->
<!--     <apex:includeScript value="//ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js" /> -->
<!--     <apex:includeScript value="//ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" /> -->
    <!-- End of script -->
    <apex:form id="formId">
        <!-- Start of PageBlock -->
        <apex:pageBlock tabStyle="Account">
            <apex:outputPanel id="Messages">
                <apex:pagemessages />
            </apex:outputPanel>
            <apex:outputPanel id="detailPanel"
                rendered="{!NOT(ISNULL(objConfigList.sObject_1__c))}">
                <!-- Start of PageBlockSection -->
                <apex:pageblockSection title="{!mapApiNameLabel[objConfigList.sObject_1__c]} Information "
                    columns="2">
                    <apex:repeat value="{!clientDetails}" var="or">
                        <apex:commandButton value="Return to {!mapApiNameLabel[objConfigList.sObject_1__c]}"
                            action="{!redirectToParent}" styleclass="filterButton" />
                        <apex:pageBlockSectionItem >
                        &nbsp;
                        </apex:pageBlockSectionItem>
                        <apex:repeat value="{!accessibleFieldsForClient}" var="accField">
                            <apex:outputField value="{!or[accField]}" />
                        </apex:repeat>
                    </apex:repeat>

                </apex:pageblockSection>
                <!-- End of PageBlockSection -->
            </apex:outputPanel>
            <!-- Status Bar -->
            <apex:outputpanel >
                <apex:actionStatus id="statusBar" layout="block">
                    <apex:facet name="start">
                        <div id="assign-action-spinner-main">
                            <div id="assign-action-spinner-content">
                                <img src="/img/analytics/reportbuilder/icons/spinner32.gif"
                                    alt="Processing..." title="Processing..." />
                                <p>Processing...</p>
                            </div>
                        </div>
                    </apex:facet>
                </apex:actionStatus>
            </apex:outputpanel>
            <!-- End Of Status -->
            <apex:actionRegion >
                <apex:outputPanel id="theNewOutPutPanel"
                    rendered="{!NOT(ISNULL(objConfigList.sObject_2__c))}">
                    <apex:pageBlockSection title="{!mapApiNameLabel[objConfigList.sObject_2__c]} Information"
                        columns="1">
                    </apex:pageBlockSection>
                    <apex:pageBlockTable value="{!dreamMapDetails}" var="objDreamMap"
                        id="dreamMapDetails2" rendered="{!dreamMapDetails.size > 0}">
                        <apex:repeat value="{!accessibleFieldsForDreamMap}"
                            var="fieldDreamMap" id="theRepeat">
                            <apex:column headerClass="ct" styleClass="ct">
                                <apex:facet name="header">
                                    {!$ObjectType[objDreamMapName].fields[fieldDreamMap].Label}
                                </apex:facet>
                                <apex:outputField value="{!objDreamMap[fieldDreamMap]}"
                                    rendered="{!or(!editBtn,objDreamMap.Id!=editableDreamMap)}" />
                                <apex:inputField value="{!objDreamMap[fieldDreamMap]}"
                                    styleclass="widthOnEditDelClass"
                                    rendered="{!and(editBtn,objDreamMap.Id=editableDreamMap)}"
                                    required="{!accessFieldsDreamMap[fieldDreamMap]}"/>
                            </apex:column>
                        </apex:repeat>
                        <apex:column headerValue="Action" headerClass="ct" styleClass="ct">
                            <apex:commandLink action="{!editDreamMap}" title="Edit"
                                rendered="{!!editBtn}" rerender="theNewOutPutPanel"
                                status="statusBar" oncomplete="callSorter();">
                                <apex:param name="editBtn" value="true" assignTo="{!editBtn}" />
                                <apex:param name="dreamMapDelId1" value="{!objDreamMap.Id}"
                                    assignto="{!editableDreamMap}" />
                                <apex:image id="theImageEdit" value="{!$Resource.editImage}"
                                    width="20" height="20" />
                            </apex:commandLink>
                            <apex:commandLink action="{!saveDreamMaps}" title="Save"
                                rendered="{!objDreamMap.Id==editableDreamMap}" oncomplete="callSorter();"
                                rerender="theNewOutPutPanel" status="statusBar">
                                <apex:param name="editable" value="false" assignto="{!editBtn}" />
                                <apex:param name="editableDreamMap" value=""
                                    assignto="{!editableDreamMap}" />
                                <apex:image id="theSaveImg" value="{!$Resource.saveImg}"
                                    width="20" height="20" />
                            </apex:commandLink>
                                &nbsp;&nbsp;
                                <apex:commandLink action="{!showRecords}" title="Cancel"
                                rendered="{!objDreamMap.Id==editableDreamMap}" oncomplete="callSorter();"
                                rerender="theNewOutPutPanel" status="statusBar"
                                immediate="true">
                                <apex:param name="editableDreamMap" value=""
                                    assignto="{!editableDreamMap}" />
                                <apex:param name="dreamMapDelId1" value="false"
                                    assignto="{!editBtn}" />
                                <apex:image id="theCancel" value="{!$Resource.cancel}"
                                    width="20" height="20" />
                            </apex:commandLink>
                            <apex:commandLink onclick="deleteRecord ('{!objDreamMap.Id}');"
                                title="Delete" rerender="thePage" rendered="{!!editBtn}"
                                status="statusBar" oncomplete="callSorter();">
                                <apex:image id="theImage" value="{!$Resource.delImg}" width="20"
                                    height="20" />
                            </apex:commandLink>
                                &nbsp;&nbsp;
                                <apex:outputLink value="/{!objDreamMap.Id}"
                                title="View {!mapApiNameLabel[objConfigList.sObject_2__c]}"
                                rendered="{!!editBtn}" target="_blank">
                                <apex:image id="viewRec" value="{!$Resource.viewImg}" width="20"
                                    height="20" style="padding-right: 12px;" />
                            </apex:outputLink>
                        </apex:column>
                        <apex:column styleClass="ct">
                            <apex:commandButton action="{!goalDetailsList}"
                                value="Show Details" styleClass="colorChangeLink"
                                onclick="changeColor(this)" rendered="{!!editBtn}"
                                rerender="goalDetails,btnForObjective,popupForObjective,rendereTable,Messages"
                                style="align:center;" styleclass="filterButton"
                                status="statusBar" oncomplete="callSorter();">
                                <apex:param id="selectedDreamMap" name="dreamMapDetails"
                                    value="{!objDreamMap.Id}" />
                                <apex:param name="dreamMapDetails" value="{!objDreamMap.Id}"
                                    assignTo="{!dreamMapId}" id="dreamMapId" />
                                <apex:param name="dreamMapDetailss" value="{!objDreamMap.Id}"
                                    assignTo="{!strDreamGoalId}" id="dreamMapIds" />
                            </apex:commandButton>
                        </apex:column>
                    </apex:pageBlockTable>
                </apex:outputPanel>
                <apex:actionFunction name="deleteRow" action="{!deleteDreamMaplst}"
                    reRender="showGoalTableId,rendereTable,theNewOutPutPanel, dreamMapDetails2, 
                              tableForGoalObjectives, goalDetails "
                    status="statusBar">
                    <apex:param id="paramId" name="dreamMapToDel" value="" />
                    <apex:param id="showBtn" name="showBtn" value="false"
                        assignTo="{!showBtn}" />
                </apex:actionFunction>
            </apex:actionRegion>
            <br />
            <center>
                <apex:commandButton action="{!addDreamMap}"
                    value="Add {!mapApiNameLabel[objConfigList.sObject_2__c]}"
                    id="dreamMapButton" oncomplete="callSorter();"
                    rendered="{!NOT(OR(editBtn,ISNULL(objConfigList.sObject_2__c)))}"
                    status="statusBar" styleclass="myButton addDream" />
            </center>
            <br />
            <apex:outputPanel id="goalDetails">
                <apex:pageBlockSection title="{!mapApiNameLabel[objConfigList.sObject_3__c]} Information"
                    columns="1" rendered="{!showBtn}">
                    <apex:outputPanel id="btnForObjective" rendered="{!showBtn}">
                        <center>
                            <apex:commandButton action="{!addGoalsAndObjectives}"
                                value="Add {!mapApiNameLabel[objConfigList.sObject_3__c]} & {!mapApiNameLabel[objConfigList.sObject_4__c]}"
                                id="goalObjectiveButton" status="statusBar" rerender="popup"
                                styleclass="myButton" oncomplete="callSorter();">
                                <apex:param name="dreamMapDelId" value="{!strDreamGoalId}"
                                    id="dreamMapDelId" assignTo="{!dreamMapId}"/ >
                                    <apex:param name="clientId" value="{!strDreamGoalId}"
                                        id="clientId" assignTo="{!clientIdExt}"/ >
                            </apex:commandButton>
                        </center>
                    </apex:outputPanel>
                    <apex:outputpanel id="goalDetailsStatus">
                        <tr>
                            <th><apex:outputLabel value="{!dynamicLabel} Status"></apex:outputLabel>
                                &nbsp;&nbsp;&nbsp;&nbsp; <apex:selectList title="Select Operator" 
                                    value="{!operatorSymbol}"
                                    multiselect="false" size="1">
                                    <apex:selectOptions value="{!items}" />
                                </apex:selectList> &nbsp;&nbsp;&nbsp;&nbsp; <apex:selectList title="Select Status"
                                    value="{!statusSelectedValue}" multiselect="false" size="1">
                                    <apex:selectOptions value="{!itemsStatus}" />
                                </apex:selectList> &nbsp;&nbsp;&nbsp;&nbsp;
                                
                                <apex:commandButton value="Filter Data" action="{!filterList}"
                                    rerender="rendereTable,goalDetails" status="statusBar"
                                    rendered="{!NOT(ISNULL(itemsStatus))}" oncomplete="callSorter();"
                                    styleclass="filterButton" /> &nbsp;&nbsp;&nbsp;&nbsp; 
                                    <apex:image url="{!URLFOR($Resource.PDF_Image,'/pdf_download.jpg')}"
                                    width="70" height="70"
                                    onclick="window.open('/apex/DynamicQueryPDF?dreamMapDetails={!strDreamGoalId}'+
                                    '&clientId={!strClientId}&goalSortField={!goalSortField}&'+
                                    'goalSortingDirection={!goalSortingDirection}'+
                                    '&objectiveSortingField={!objectiveSortField}'+
                                    '&objectiveSortingDirection={!objectiveSortingDirection}'+
                                    '&selectedGoal={!selectedGoal}&objConfigId={!objConId}');"
                                    style="cursor: pointer !important; float: right !important; margin-right:2%"
                                    rendered="{!AllRecords.size > 0}" /></th>
                </tr>
                </apex:outputpanel>
                <br />
                <apex:outputPanel >
                    <apex:outputLabel value="Showing {!IF(totalRecs > 0, (OffsetSize)+1, 0 ) } - 
                                {!IF(totalRecs < (OffsetSize+LimitSize), 
                                totalRecs, (OffsetSize+LimitSize))} Of {!totalRecs} 
                                {!mapApiNameLabel[objConfigList.sObject_3__c]}" />
                    <center>
                    <apex:commandButton value="First Page"
                        rerender="rendereTable,goalDetails" action="{!firstPage}"
                        disabled="{!prev}" status="statusBar" styleclass="{!IF((prev=true),'','filterButton')}"
                        oncomplete="callSorter();" rendered="{!IF(AllRecords.size > 0,true,false)}"/>
                    <apex:commandButton value="Previous" rerender="rendereTable,goalDetails" action="{!previous}"
                        disabled="{!prev}" status="statusBar" styleclass="{!IF((prev=true),'','filterButton')}"
                        oncomplete="callSorter();" rendered="{!IF(AllRecords.size > 0,true,false)}"/>
                    <apex:commandButton value="Next"
                        rerender="rendereTable,goalDetails, showGoalTableId" action="{!next}"
                        disabled="{!next}" status="statusBar" styleclass="{!IF((next=true),'','filterButton')}"
                        oncomplete="callSorter();" rendered="{!IF(AllRecords.size > 0,true,false)}"/>
                    <apex:commandButton value="Last Page" rerender="rendereTable,goalDetails" action="{!LastPage}"
                        disabled="{!next}" status="statusBar" styleclass="{!IF((next=true),'','filterButton')}"
                        oncomplete="callSorter();" rendered="{!IF(AllRecords.size > 0,true,false)}"/>
                    </center>
                    <br/>
                    <apex:actionFunction name="fetchRecords" action="{!sortGoals}"
                        reRender="rendereTable,goalDetails" status="statusBar" />
                </apex:outputPanel>
                </apex:pageBlockSection>
                
                <apex:actionFunction name="deleteGoal" action="{!deleteGoal}"
                    reRender="showGoalTableId,rendereTable,goalDetails" status="statusBar">
                    <apex:param value="" name="goalId" />
                </apex:actionFunction>
                <apex:actionFunction name="deleteObjective"
                    action="{!deleteObjective}" reRender="showGoalTableId,rendereTable"
                    status="statusBar">
                    <apex:param value="" name="goalId" />
                    <apex:param value="" name="ObjectiveId" />
                </apex:actionFunction>

                <apex:outputPanel id="rendereTable">
                    <apex:pagemessage title="No Details fetched"
                        summary="No records found for the given input" severity="info"
                        rendered="{!AND(showBtn, AllRecords.size=0)}" />
                    <apex:pagemessage id="messageId" Summary="Field can't be sorted"
                        severity="warning" rendered="{!sortError}" strength="2" />
                    <apex:includeScript value="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" />
				    <apex:includeScript value="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/jquery-ui.min.js" />
				    <apex:includeScript value="{!URLFOR($Resource.jQueryAnimatedTableSorter, '/animatedtablesorter-0.2.2/tsort.js')}"/>
				    <apex:includeScript value="{!URLFOR($Resource.jQueryAnimatedTableSorter, '/animatedtablesorter-0.2.2/tsort.min.js')}"/>
                    
                    <apex:actionRegion >
                        <apex:outputPanel id="showGoalTableId"
                            rendered="{!AllRecords.size > 0}">
                            <table class="tableClassforGoalObjective tableCalssForAlignment"
                                id="tableForGoalObjectives">
                                <apex:repeat value="{!AllRecords}" var="rec">
                                    <thead>
                                        <tr class="tableforFirstGoalObjective">
                                            <th
                                                style="padding-left: 30px; padding-right: 52px; width: 120px !important;">
                                                Action</th>
                                            <apex:repeat value="{!accessibleFieldsForGoals}"
                                                var="fieldsForGoal">
                                                <apex:outputText rendered="{!IF(ISNULL(dreamMapField ), TRUE,
                                                 $ObjectType[objGoalName].fields[fieldsForGoal].Label != dreamMapField)}">
                                                <th>{!$ObjectType[objGoalName].fields[fieldsForGoal].Label}</th>
                                                    <!-- th><apex:commandLink value="{!$ObjectType[objGoalName].fields[fieldsForGoal].Label} {!IF(goalSortField=fieldsForGoal,IF(goalSortingDirection,'?','?'),'')}"
                                                            action="{!sortGoals}"
                                                            rerender="goalDetails,messageId,formId"
                                                            status="statusBar" style="text-decoration: none;"
                                                            title="Click Here To Sort">
                                                            <apex:param value="{!fieldsForGoal}"
                                                                assignTo="{!goalSortField}" name="goalSortField" />
                                                        </apex:commandLink></th -->
                                                </apex:outputText>
                                            </apex:repeat>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr class="tableforSecondGoalObjective">
                                            <td style="width: 120px !important;"><apex:outputPanel id="theNewGoalPanel">
                                                    <apex:commandLink action="{!saveGoalFromLink}"
                                                        rendered="{!and(rec.toggleEditSave,!canEdit)}"
                                                        title="Save" reRender="showGoalTableId" status="statusBar" oncomplete="callSorter();">
                                                        <apex:param name="goalId" value="{!rec.objId}"
                                                            assignTo="{!goalId}" />
                                                        <apex:param name="toggleVal" value="false"
                                                            assignTo="{!rec.toggleEditSave}" />
                                                        <apex:param name="canEdt" value="true"
                                                            assignTo="{!canEdit}" />
                                                        <apex:image id="saveImg" value="{!$Resource.saveImg}"
                                                            width="20" height="20" />
                                                    </apex:commandLink>
                                        &nbsp;&nbsp;
                                        <apex:commandLink rendered="{!and(rec.toggleEditSave,!canEdit)}"
                                                        title="Cancel" action="{!refresh}"
                                                        reRender="showGoalTableId" status="statusBar"
                                                        immediate="true" oncomplete="callSorter();">
                                                        <apex:param name="goalId" value="{!rec.objId}"
                                                            assignTo="{!goalId}" />
                                                        <apex:param name="toggleVal" value="false"
                                                            assignTo="{!rec.toggleEditSave}" />
                                                        <apex:param name="canEdt" value="true"
                                                            assignTo="{!canEdit}" />
                                                        <apex:image id="canImg" value="{!$Resource.cancel}"
                                                            width="20" height="20" />
                                                    </apex:commandLink>

                                                    <apex:commandLink action="{!showBtnOnEdit}"
                                                        rendered="{!and(!rec.toggleEditSave,canEdit)}" oncomplete="callSorter();"
                                                        title="Edit" reRender="showGoalTableId" status="statusBar">
                                                        <apex:param name="toggleVal" value="true"
                                                            assignTo="{!rec.toggleEditSave}" />
                                                        <apex:param name="canEdt" value="false"
                                                            assignTo="{!canEdit}" />
                                                        <apex:image id="theImageEdit"
                                                            value="{!$Resource.editImage}" width="20" height="20" />
                                                    </apex:commandLink>
                                        &nbsp;&nbsp;
                                        <apex:commandLink onClick="deleteGoalRow('{!rec.objId}');"
                                                        rendered="{!and(!rec.toggleEditSave,canEdit)}" oncomplete="callSorter();"
                                                        action="{!refresh}" title="Delete" reRender="goalDetails,rendereTable,showGoalTableId">
                                                        <apex:image id="deleImg" value="{!$Resource.delImg}"
                                                            width="20" height="20" />
                                                    </apex:commandLink> 
                                        &nbsp;&nbsp;
                                        <apex:outputLink value="/{!rec.objId}"
                                                        title="View {!mapApiNameLabel[objConfigList.sObject_3__c]}"
                                                        rendered="{!and(!rec.toggleEditSave,canEdit)}"
                                                        target="_blank">
                                                        <apex:image id="viewRec" value="{!$Resource.viewImg}"
                                                            width="20" height="20" style="padding-right: 12px;" />
                                                    </apex:outputLink>
                                        &nbsp;
                                        
                                    </apex:outputPanel></td>
                                            <apex:repeat value="{!accessibleFieldsForGoals}"
                                                var="fieldsForGoal">
                                                <apex:outputText rendered="{!IF(ISNULL(dreamMapField ), 
                                                TRUE, 
                                                $ObjectType[objGoalName].fields[fieldsForGoal].Label != dreamMapField)}">
                                                    <td><apex:outputField value="{!rec.sObj[fieldsForGoal]}"
                                                            rendered="{!or(!rec.toggleEditSave,canEdit)}" /> 
                                                            <apex:inputField value="{!rec.sObj[fieldsForGoal]}"
                                                            rendered="{!and(rec.toggleEditSave,!canEdit)}" 
                                                            required="{!accessFieldsGoals[fieldsForGoal]}"/></td>
                                                </apex:outputText>
                                            </apex:repeat>
                                        </tr>
                                        <tr>
                                            <td colspan="{!accessibleFieldsForGoals.size+1}">
                                                <table class="tableSorter">
                                                    <thead>
                                                        <tr class="sorterTableRow">
                                                            <th
                                                                style="padding-left: 10px; padding-right: 13px; width: 120px !important;">
                                                                Action</th>
                                                            <apex:repeat value="{!accessibleFieldsForObjectives}"
                                                                var="fieldsForObjective">
                                                                <!-- apex:outputText rendered="{!goalField !=$ObjectType[objObjectiveName].fields[fieldsForObjective].Label}" -->
                                                                <th> 
                                                                {!$ObjectType[objObjectiveName].
                                                                fields[fieldsForObjective].Label}
                                                                </th>
                                                                    <!-- th data-sortBy="text"><apex:commandLink value="{!$ObjectType[objObjectiveName].fields[fieldsForObjective].Label} {!IF((AND(objectiveSortField=fieldsForObjective,rec.objId=selectedGoal)),IF(objectiveSortingDirection,'?','?'),'')}"
                                                                            action="{!sortObjectives}"
                                                                            rerender="rendereTable,goalDetails,messageId,formId"
                                                                            status="statusBar" style="text-decoration: none;"
                                                                            title="Click Here To Sort">
                                                                            <apex:param value="{!fieldsForObjective}"
                                                                                assignTo="{!objectiveSortField}"
                                                                                name="objectiveSortField" />
                                                                            <apex:param value="{!rec.objId}"
                                                                                assignTo="{!selectedGoal}" name="selectedGoal" />
                                                                        </apex:commandLink></th -->
                                                                <!-- /apex:outputText -->
                                                            </apex:repeat>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <apex:repeat value="{!rec.children}" var="child"
                                                            id="childRepeat">
                                                            <tr class="ChildRepeatTrForDm" id="theRow">
                                                                <td style="width: 120px !important;"><apex:outputPanel id="theNewObjectivePanel">
                                                                        <apex:commandLink action="{!saveObjectiveForEditLink}"
                                                                            rendered="{!and(child.toggleEditSave,!canEdit)}"
                                                                            title="Save" reRender="showGoalTableId"
                                                                            status="statusBar" oncomplete="callSorter();">
                                                                            <apex:param name="goalId" value="{!rec.objId}"
                                                                                assignTo="{!goalId}" />
                                                                            <apex:param name="objectiveId" value="{!child.objId}"
                                                                                assignTo="{!objectiveId}" />
                                                                            <apex:param name="toggleVal" value="false"
                                                                                assignTo="{!child.toggleEditSave}" />
                                                                            <apex:param name="canEdt" value="true"
                                                                                assignTo="{!canEdit}" />
                                                                            <apex:image id="saveImg" value="{!$Resource.saveImg}"
                                                                                width="20" height="20" />
                                                                        </apex:commandLink>
                                        &nbsp;&nbsp;
                                        <apex:commandLink rendered="{!and(child.toggleEditSave,!canEdit)}"
                                                                            title="Cancel"
                                                                            reRender="showGoalTableId,rendereTable"
                                                                            status="statusBar" action="{!refresh}"
                                                                            immediate="true" oncomplete="callSorter();">
                                                                            <apex:param name="goalId" value="{!rec.objId}"
                                                                                assignTo="{!goalId}" />
                                                                            <apex:param name="objectiveId" value="{!child.objId}"
                                                                                assignTo="{!objectiveId}" />
                                                                            <apex:param name="toggleVal" value="false"
                                                                                assignTo="{!child.toggleEditSave}" />
                                                                            <apex:param name="canEdt" value="true"
                                                                                assignTo="{!canEdit}" />
                                                                            <apex:image id="theCan" value="{!$Resource.cancel}"
                                                                                width="20" height="20" />
                                                                        </apex:commandLink>

                                                                        <apex:commandLink action="{!showBtnOnEdit}"
                                                                            rendered="{!and(!child.toggleEditSave,canEdit)}"
                                                                            title="Edit" reRender="showGoalTableId"
                                                                            status="statusBar" oncomplete="callSorter();">
                                                                            <apex:param name="toggleVal" value="true"
                                                                                assignTo="{!child.toggleEditSave}" />
                                                                            <apex:param name="canEdt" value="false"
                                                                                assignTo="{!canEdit}" />
                                                                            <apex:image id="EditImg"
                                                                                value="{!$Resource.editImage}" width="20"
                                                                                height="20" />
                                                                        </apex:commandLink>
                                        &nbsp;&nbsp;
                                       <apex:commandLink onClick="deleteObjectiveRow('{!rec.objId}','{!child.objId}');"
                                                                            rendered="{!and(!child.toggleEditSave,canEdit)}"
                                                                            title="Delete"
                                                                            action="{!refresh}" reRender="goalDetails,rendereTable"
                                                                            status="statusBar" oncomplete="callSorter();">
                                                                            <apex:image id="deleIcon" value="{!$Resource.delImg}"
                                                                                width="20" height="20" />
                                                                        </apex:commandLink>
                                        &nbsp;&nbsp;&nbsp;&nbsp;
                                        <apex:outputLink value="/{!child.objId}"
                                                                            title="View {!mapApiNameLabel[objConfigList.sObject_4__c]}"
                                                                            target="_blank"
                                                                            rendered="{!and(!child.toggleEditSave,canEdit)}">
                                                                            <apex:image id="showIconView"
                                                                                value="{!$Resource.viewImg}" width="20" height="20" />
                                                                        </apex:outputLink>
                                                                    </apex:outputPanel></td>

                                                                <apex:repeat value="{!accessibleFieldsForObjectives}"
                                                                    var="fieldsForObjective" id="theRepeat">
                                                                    <apex:outputText rendered="{!goalField !=$ObjectType[objObjectiveName].fields[fieldsForObjective].Label}">
                                                                        <td><apex:outputField value="{!child.sObj[fieldsForObjective]}"
                                                                                rendered="{!or(!child.toggleEditSave,canEdit)}" />
                                                                                <apex:inputField value="{!child.sObj[fieldsForObjective]}"
                                                                                rendered="{!and(child.toggleEditSave,!canEdit)}" required="{!accessFieldsObjectives[fieldsForObjective]}"  />
                                                                        </td>
                                                                    </apex:outputText>
                                                                </apex:repeat>
                                                            </tr>
                                                        </apex:repeat>
                                                    </tbody>
                                                </table>
                                            </td>
                                        <tr class="AddObjectiveRow">
                                            <td colspan="{!accessibleFieldsForGoals.size+1}"><apex:commandButton value="Add {!mapApiNameLabel[objConfigList.sObject_4__c]}"
                                                    id="objectiveButton"
                                                    styleclass="AddobjectiveButton myButton addObjButton"
                                                    action="{!objectiveDetailstoAddRow}" rerender="goalDetails"
                                                    status="statusBar" oncomplete="applyScrollElem(); callSorter();">
                                                    <apex:param name="goalId" value="{!rec.objId}" id="GoalId" />
                                                </apex:commandButton></td>
                                        </tr>
                                        </tr>
                                    </tbody>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:actionRegion>
                </apex:outputPanel>
                <apex:actionRegion >
                    <apex:outputPanel id="objectiveDetails">
                        <apex:outputPanel id="inOutputPanel"
                            styleClass="popupBackgroundForObjectives" layout="block"
                            rendered="{!popupForObjectives}">
                            <apex:pageMessages />
                            <apex:outputPanel styleClass="custPopupObjectives" layout="block"
                                rendered="{!popupForObjectives}" style="max-height:13%">
                                <table class="tableClassforGoalObjective" id="objectiveTable">
                                    <tr>
                                        <td colspan="{!accessFieldsObjectivesSize}" align="center"
                                            class="objectiveTableHeader">{!mapApiNameLabel[objConfigList.sObject_4__c]}</td>
                                    </tr>

                                    <tr class="objectiveTableData sorterTableRow">
                                        <apex:repeat value="{!accessibleFieldsForObjectives}"
                                            var="fieldsForObjective">
                                            <apex:outputText rendered="{!goalField != $ObjectType[objObjectiveName].fields[fieldsForObjective].Label}">
                                                <th>{!$ObjectType[objObjectiveName].fields[fieldsForObjective].Label}</th>
                                            </apex:outputText>
                                        </apex:repeat>
                                    </tr>

                                    <apex:repeat value="{!lstToDisplayForObjective}" var="rec">
                                        <tr class="ChildRepeatTrForDm">
                                            <apex:repeat value="{!accessibleFieldsForObjectives}"
                                                var="fieldsForObjective">
                                                <td><apex:inputField id="inputfield1"
                                                        value="{!rec.sObj[fieldsForObjective]}"
                                                        rendered="{!goalField != 
                                                        $ObjectType[objObjectiveName].fields[fieldsForObjective].Label}"
                                                        required="{!accessFieldsObjectives[fieldsForObjective]}" />
                                                </td>
                                            </apex:repeat>
                                        </tr>
                                    </apex:repeat>
                                </table>
                                <br />
                                <apex:commandButton value="Add Row" action="{!addRow}"
                                    immediate="true" styleclass="filterButton" oncomplete="callSorter();"
                                    style="padding:3px 4px !important;" reRender="objectiveDetails"
                                    status="statusBar" />&nbsp;
                        <apex:commandButton value="Remove Row"
                                    action="{!removeRow}" immediate="true" oncomplete="callSorter();"
                                    styleclass="filterButton" style="padding:3px 4px !important;"
                                    reRender="objectiveDetails" status="statusBar" />&nbsp;
                        <apex:commandButton value="Save"
                                    action="{!saveObjetives}" status="statusBar"
                                    reRender="showGoalTableId, objectiveDetails" oncomplete="callSorter();"
                                    styleclass="filterButton" style="padding:3px 4px !important;" />&nbsp;
                        <apex:commandButton value="Close"
                                    action="{!closePopup}" immediate="true" oncomplete="callSorter();"
                                    reRender="showGoalTableId, objectiveDetails" status="statusBar"
                                    styleclass="filterButton" style="padding:3px 4px !important;" />&nbsp;
                  </apex:outputPanel>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:actionRegion>
            </apex:outputPanel>
            </apex:pageblock>
            <!-- End of PageBlock -->
    </apex:form>
    <apex:outputPanel id="popup">
        <apex:outputPanel id="OutputForPopUp"
            styleClass="popupBackgroundForObjectives" layout="block"
            rendered="{!popupForgoals}">
            <apex:outputPanel styleClass="custPopupForObjectives" layout="block"
                rendered="{!popupForgoals}" style="height: 18%;">
                <div id="dialog">
                    <apex:include pageName="DynamicQueryForContactGoalsPage"
                        rendered="{!NOT(AND(ISNULL(objConfigList), ISNULL(strClientId)))}"></apex:include>
                </div>
            </apex:outputPanel>
        </apex:outputPanel>
    </apex:outputPanel>
    <!--Start Of Script-->
    <script>
        $( document ).ready(function() {
            callSorter ();
        });
        function callSorter () {
            $("table.tableSorter").tableSort();
        } 
        function applyScrollElem () {
           $(".custPopupObjectives").scroll(function () {
               $('#datePicker').hide(); 
           });
        }
        
        function deleteRecord (dreamMapId) {
        var cnfm = confirm ('Are you sure to delete this row?');
            if (cnfm) {
                deleteRow(dreamMapId);
            }
            
        }
    
        function deleteGoalRow(goalId) {
            var cnfrm = confirm ('Are you sure to delete this record');
            if (cnfrm) {
                deleteGoal(goalId);
            }
        }
    
        function deleteObjectiveRow(goalId,objvId) {
            var cnfrm = confirm ('Are you sure to delete this record?');
            if (cnfrm) {
                deleteObjective(goalId,objvId);
            }
        }
    
        function changeColor(btnEl)
            {
                 btnEl.style.color= 'black';   
            }
            $('.colorChangeLink').click(function () {
               $(this).closest("tr").css("background","rgb(176, 225, 241)");
            });
    </script>
    <!--End Of Script-->
</apex:page>